{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "86964b25_db6331c1",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/rabbitmq/Manager.java",
        "patchSetId": 8
      },
      "lineNbr": 89,
      "author": {
        "id": 1014252
      },
      "writtenOn": "2023-11-15T10:09:14Z",
      "side": 1,
      "message": "I think handling the conditional here rather than in the `load()` method makes the code a lot easier to read.\n\n\n```suggestion\n\n  @Override\n  public void start() {\n    Properties base \u003d getBaseProperties()\n    if (base.getSection(General.class).publishAllGerritEvents) {\n      logger.atFine().log(\"publishAllGerritEvents enabled\");\n      List\u003cProperties\u003e propList \u003d getPublisherProperties(base);\n      for (Properties properties : propList) {\n        Publisher publisher \u003d publisherFactory.create(properties);\n        publisher.start();\n        String listenAs \u003d properties.getSection(Gerrit.class).listenAs;\n        if (!listenAs.isEmpty()) {\n          userEventWorker.addPublisher(pluginName, publisher, listenAs);\n        } else {\n          defaultEventWorker.addPublisher(publisher);\n        }\n        publisherList.add(publisher);\n      }\n    }\n  }\n```",
      "range": {
        "startLine": 74,
        "startChar": 0,
        "endLine": 89,
        "endChar": 3
      },
      "revId": "37dea4360c1a1de79423b59f8345791cbc4c7427",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ba470e25_d05b2209",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/rabbitmq/Manager.java",
        "patchSetId": 8
      },
      "lineNbr": 89,
      "author": {
        "id": 1135623
      },
      "writtenOn": "2023-11-27T09:47:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "86964b25_db6331c1",
      "range": {
        "startLine": 74,
        "startChar": 0,
        "endLine": 89,
        "endChar": 3
      },
      "revId": "37dea4360c1a1de79423b59f8345791cbc4c7427",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "25cb4445_a53ebda7",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/rabbitmq/Manager.java",
        "patchSetId": 8
      },
      "lineNbr": 133,
      "author": {
        "id": 1014252
      },
      "writtenOn": "2023-11-15T10:09:14Z",
      "side": 1,
      "message": "You could split this into two separate methods but I\u0027d prefer if you handled all properties the same so you\u0027d have a `BasePropertiesProvider implements Provider\u003cProperties\u003e` and a lazy loaded `PublisherProvider Implements Provider\u003cList\u003cProperties\u003e\u003e` that you inject instead, like you do for `BrokerApiPropertiesProvider`. This would also avoid duplication of code as the other Providers could Inject the BasePropertiesProvider.\n\n```suggestion\n\n  private List\u003cProperties\u003e getBaseProperties() {\n    List\u003cProperties\u003e propList \u003d new ArrayList\u003c\u003e();\n    // Load base\n    Properties base \u003d propFactory.create(pluginDataDir.resolve(pluginName + FILE_EXT));\n    base.load();\n    if (!base.getSection(General.class).publishAllGerritEvents) {\n      logger.atFine().log(\"publishAllGerritEvents disabled\");\n      return propList;\n    }\n  }\n\n\n  private List\u003cProperties\u003e getPublisherProperties(Properties baseProperties) {\n    // Load sites\n    try (DirectoryStream\u003cPath\u003e ds \u003d\n        Files.newDirectoryStream(pluginDataDir.resolve(SITE_DIR), \"*\" + FILE_EXT)) {\n      for (Path configFile : ds) {\n        Properties site \u003d propFactory.create(configFile);\n        if (site.load(base)) {\n          propList.add(site);\n        }\n      }\n    } catch (IOException ioe) {\n      logger.atWarning().withCause(ioe).log(\"Failed to load properties.\");\n    }\n    if (propList.isEmpty()) {\n      logger.atWarning().log(\"No site configs found. Using base config only!\");\n      propList.add(base);\n    }\n    return propList;\n  }\n```",
      "range": {
        "startLine": 105,
        "startChar": 0,
        "endLine": 133,
        "endChar": 3
      },
      "revId": "37dea4360c1a1de79423b59f8345791cbc4c7427",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e030e492_1d550f14",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/rabbitmq/Manager.java",
        "patchSetId": 8
      },
      "lineNbr": 133,
      "author": {
        "id": 1135623
      },
      "writtenOn": "2023-11-27T09:47:21Z",
      "side": 1,
      "message": "I have done this in a new change that is a parent to this.",
      "parentUuid": "25cb4445_a53ebda7",
      "range": {
        "startLine": 105,
        "startChar": 0,
        "endLine": 133,
        "endChar": 3
      },
      "revId": "37dea4360c1a1de79423b59f8345791cbc4c7427",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e43ee823_71fc9245",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/rabbitmq/message/BrokerApiPublisher.java",
        "patchSetId": 8
      },
      "lineNbr": 64,
      "author": {
        "id": 1014252
      },
      "writtenOn": "2023-11-15T10:09:14Z",
      "side": 1,
      "message": "Why call `super.start()` again? It\u0027s already called in `start()`.",
      "range": {
        "startLine": 64,
        "startChar": 5,
        "endLine": 64,
        "endChar": 20
      },
      "revId": "37dea4360c1a1de79423b59f8345791cbc4c7427",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4ed643ad_146af954",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/rabbitmq/message/BrokerApiPublisher.java",
        "patchSetId": 8
      },
      "lineNbr": 64,
      "author": {
        "id": 1135623
      },
      "writtenOn": "2023-11-15T12:42:03Z",
      "side": 1,
      "message": "Something like this need to be done to be able to publish again after a call to RabbitMqBrokerApi::disconnect, otherwise you are not able to publish until you restart the plugin.",
      "parentUuid": "e43ee823_71fc9245",
      "range": {
        "startLine": 64,
        "startChar": 5,
        "endLine": 64,
        "endChar": 20
      },
      "revId": "37dea4360c1a1de79423b59f8345791cbc4c7427",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bb5ae8c5_e0206f0b",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/rabbitmq/message/BrokerApiPublisher.java",
        "patchSetId": 8
      },
      "lineNbr": 64,
      "author": {
        "id": 1014252
      },
      "writtenOn": "2023-11-15T13:14:10Z",
      "side": 1,
      "message": "Ok, but if BrokerApi.disconnect() is called (`/** Disconnect from broker and cancel all active consumers */`), doesn\u0027t that mean that \"I am done with this instance of BrokerApi, I don\u0027t need the resources anymore\"? If `publish` is called after that it seems to me to be a bug in the consumer of the API, if the consumer cancelled all active consumers and disconnected it cannot assume that you can still use it?\nWhat am I missing?",
      "parentUuid": "4ed643ad_146af954",
      "range": {
        "startLine": 64,
        "startChar": 5,
        "endLine": 64,
        "endChar": 20
      },
      "revId": "37dea4360c1a1de79423b59f8345791cbc4c7427",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ec20400b_3e4abfac",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/rabbitmq/message/BrokerApiPublisher.java",
        "patchSetId": 8
      },
      "lineNbr": 64,
      "author": {
        "id": 1135623
      },
      "writtenOn": "2023-11-15T14:41:06Z",
      "side": 1,
      "message": "The idea was that if one plugin decides to call disconnect the other plugins should still be able to publish. But I now realize that if we want it that way we should also recover the subscribers. This does not feel like the correct way.\n\nOn the other hand just letting one plugin disconnect and make the BrokerApi unusable for other plugins does not sound right either.\n\nI think I have failed to understand why you would ever call disconnect.",
      "parentUuid": "bb5ae8c5_e0206f0b",
      "range": {
        "startLine": 64,
        "startChar": 5,
        "endLine": 64,
        "endChar": 20
      },
      "revId": "37dea4360c1a1de79423b59f8345791cbc4c7427",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d95a673f_2778c0a6",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/rabbitmq/message/BrokerApiPublisher.java",
        "patchSetId": 8
      },
      "lineNbr": 64,
      "author": {
        "id": 1014252
      },
      "writtenOn": "2023-11-15T14:53:18Z",
      "side": 1,
      "message": "If the BrokerApi implementation is a singleton it doesn\u0027t make much sense to me to let one consumer disconnect the publisher/subscriber for all other consumers.\nIf you want to reuse the session you could have a number of BrokerApis share the same session and f.i. unload the event-consuumers that the BrokerApi instance have added but let the session live on.",
      "parentUuid": "ec20400b_3e4abfac",
      "range": {
        "startLine": 64,
        "startChar": 5,
        "endLine": 64,
        "endChar": 20
      },
      "revId": "37dea4360c1a1de79423b59f8345791cbc4c7427",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6c96d748_6851aef5",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/rabbitmq/message/BrokerApiPublisher.java",
        "patchSetId": 8
      },
      "lineNbr": 64,
      "author": {
        "id": 1135623
      },
      "writtenOn": "2023-11-27T14:24:53Z",
      "side": 1,
      "message": "I made so RabbitMQBrokerApi is not a singleton anymore and added a method removeSubscriber. To make it possible for each instance of RabbitMQBrokerApi to take care of its own set of subscribers and just remove those when calling disconnect. This will make it possible for each plugin to have its own set of subscribers without having to worry about some other plugin disconnecting them.",
      "parentUuid": "d95a673f_2778c0a6",
      "range": {
        "startLine": 64,
        "startChar": 5,
        "endLine": 64,
        "endChar": 20
      },
      "revId": "37dea4360c1a1de79423b59f8345791cbc4c7427",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4ae52b3b_0f7b2b14",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/rabbitmq/message/BrokerApiPublisher.java",
        "patchSetId": 8
      },
      "lineNbr": 66,
      "author": {
        "id": 1014252
      },
      "writtenOn": "2023-11-15T10:09:14Z",
      "side": 1,
      "message": "This is redundant information as the enclosing class will be specified in the log-event.\n\n```suggestion\n          \"Message sent with topic: %s and data: %s\", topic, event);\n```",
      "range": {
        "startLine": 66,
        "startChar": 10,
        "endLine": 66,
        "endChar": 92
      },
      "revId": "37dea4360c1a1de79423b59f8345791cbc4c7427",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a92a6571_588fb4a0",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/rabbitmq/message/BrokerApiPublisher.java",
        "patchSetId": 8
      },
      "lineNbr": 66,
      "author": {
        "id": 1135623
      },
      "writtenOn": "2023-11-27T09:47:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4ae52b3b_0f7b2b14",
      "range": {
        "startLine": 66,
        "startChar": 10,
        "endLine": 66,
        "endChar": 92
      },
      "revId": "37dea4360c1a1de79423b59f8345791cbc4c7427",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b2dda561_4b41c13e",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/rabbitmq/message/BrokerApiPublisher.java",
        "patchSetId": 8
      },
      "lineNbr": 70,
      "author": {
        "id": 1014252
      },
      "writtenOn": "2023-11-15T10:09:14Z",
      "side": 1,
      "message": "This could potentially be a lot of messages if it\u0027s possible to configure the broker API as disabled but still call the `publish()` method. I believe warning for this once in `start()\u0027 is enough.",
      "range": {
        "startLine": 69,
        "startChar": 0,
        "endLine": 70,
        "endChar": 86
      },
      "revId": "37dea4360c1a1de79423b59f8345791cbc4c7427",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c0f8f934_19641277",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/rabbitmq/message/BrokerApiPublisher.java",
        "patchSetId": 8
      },
      "lineNbr": 70,
      "author": {
        "id": 1135623
      },
      "writtenOn": "2023-11-15T12:42:03Z",
      "side": 1,
      "message": "But why would you disable the broker API if you have a plugin that use publish? Should you not enable the broker API or disable the other plugin instead?",
      "parentUuid": "b2dda561_4b41c13e",
      "range": {
        "startLine": 69,
        "startChar": 0,
        "endLine": 70,
        "endChar": 86
      },
      "revId": "37dea4360c1a1de79423b59f8345791cbc4c7427",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f9f21926_c6b42e79",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/rabbitmq/message/BrokerApiPublisher.java",
        "patchSetId": 8
      },
      "lineNbr": 70,
      "author": {
        "id": 1014252
      },
      "writtenOn": "2023-11-15T13:14:10Z",
      "side": 1,
      "message": "If those assumptions are correct we should never end up here and the log statement is moot, if they aren\u0027t you will write the same statement, as the one logged on #50, to the logs n amount of times which gives you no more information. Why would you need to inform the user again after logging on line 50?\n\nThe only way it would make sense to me is if `#stop()` set `enabled \u003d false` and this WARN message read `publish() called after BrokerApi was disconnected` to find bugs in consumers of the API.",
      "parentUuid": "c0f8f934_19641277",
      "range": {
        "startLine": 69,
        "startChar": 0,
        "endLine": 70,
        "endChar": 86
      },
      "revId": "37dea4360c1a1de79423b59f8345791cbc4c7427",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5d0ba07e_6e657623",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/rabbitmq/message/BrokerApiPublisher.java",
        "patchSetId": 8
      },
      "lineNbr": 70,
      "author": {
        "id": 1135623
      },
      "writtenOn": "2023-11-15T14:41:06Z",
      "side": 1,
      "message": "The use case is that someone want to use the rabbitMQBroker in there multi-site setup they do not read the documentation carefully enough and install the plugin without enabling the brokerApi(it is disabled by default). They realize something is wrong, check the log and more easily see that they should enable the brokerApi. \n\nEasier to find several log entries than one entry at the start of Gerrit. That is my thoughts. It just a small help and the user should be able to find the problem with just one log entry at the start eventually.",
      "parentUuid": "f9f21926_c6b42e79",
      "range": {
        "startLine": 69,
        "startChar": 0,
        "endLine": 70,
        "endChar": 86
      },
      "revId": "37dea4360c1a1de79423b59f8345791cbc4c7427",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f4b1bbaf_f8620eae",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/rabbitmq/message/BrokerApiPublisher.java",
        "patchSetId": 8
      },
      "lineNbr": 70,
      "author": {
        "id": 1014252
      },
      "writtenOn": "2023-11-27T10:28:36Z",
      "side": 1,
      "message": "I would opt for just the one log entry and assume that the user can use `grep` or whatever query language their logging system uses.",
      "parentUuid": "5d0ba07e_6e657623",
      "range": {
        "startLine": 69,
        "startChar": 0,
        "endLine": 70,
        "endChar": 86
      },
      "revId": "37dea4360c1a1de79423b59f8345791cbc4c7427",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0095ea53_630bbb97",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/rabbitmq/message/BrokerApiPublisher.java",
        "patchSetId": 8
      },
      "lineNbr": 70,
      "author": {
        "id": 1135623
      },
      "writtenOn": "2023-11-27T14:24:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f4b1bbaf_f8620eae",
      "range": {
        "startLine": 69,
        "startChar": 0,
        "endLine": 70,
        "endChar": 86
      },
      "revId": "37dea4360c1a1de79423b59f8345791cbc4c7427",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "42c41f03_1f92e005",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/rabbitmq/message/BrokerApiSubscriber.java",
        "patchSetId": 8
      },
      "lineNbr": 72,
      "author": {
        "id": 1014252
      },
      "writtenOn": "2023-11-15T10:09:14Z",
      "side": 1,
      "message": "Is this really the API for `EventDeserializer`? If unable to deserialize throw `NullpointerException`? If so that should be fixed in EventDeserializer and if it\u0027s just that it cannot handle events without type check for that here instead of catching NPE.\n\nOr does it return `null` and the NPE thrown by `eventConsumer.accept()`? If so the null-case should be handled instead of catching NPE.",
      "range": {
        "startLine": 72,
        "startChar": 21,
        "endLine": 72,
        "endChar": 43
      },
      "revId": "37dea4360c1a1de79423b59f8345791cbc4c7427",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ec798be6_65d993b7",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/rabbitmq/message/BrokerApiSubscriber.java",
        "patchSetId": 8
      },
      "lineNbr": 72,
      "author": {
        "id": 1135623
      },
      "writtenOn": "2023-11-15T12:42:03Z",
      "side": 1,
      "message": "The EventDeserializer assert that event.type is not null. If it is, it throws a NullPointerException. Earlier in the development of this plugin we got a event with event.type null and when that happened the plugin stopped working. That is why I added the catch. \nBut later I fixed it, so now I do not think we should get a event.type that is null unless something is very wrong. I think we can remove it. Do you agree?",
      "parentUuid": "42c41f03_1f92e005",
      "range": {
        "startLine": 72,
        "startChar": 21,
        "endLine": 72,
        "endChar": 43
      },
      "revId": "37dea4360c1a1de79423b59f8345791cbc4c7427",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1aad236a_c5de9bd1",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/rabbitmq/message/BrokerApiSubscriber.java",
        "patchSetId": 8
      },
      "lineNbr": 72,
      "author": {
        "id": 1014252
      },
      "writtenOn": "2023-11-15T13:14:10Z",
      "side": 1,
      "message": "That\u0027s a strange behavior from the deserializer, NPEs shouldn\u0027t be used as an API.\n\nI would to skip the EventDeserializer and just use plain Gson as all the EventDeserializer does beyond using Gson is to do that null-check for type.",
      "parentUuid": "ec798be6_65d993b7",
      "range": {
        "startLine": 72,
        "startChar": 21,
        "endLine": 72,
        "endChar": 43
      },
      "revId": "37dea4360c1a1de79423b59f8345791cbc4c7427",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "692a875c_a37906dc",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/rabbitmq/message/BrokerApiSubscriber.java",
        "patchSetId": 8
      },
      "lineNbr": 72,
      "author": {
        "id": 1014252
      },
      "writtenOn": "2023-11-15T13:15:04Z",
      "side": 1,
      "message": "https://gerrit.googlesource.com/modules/events-broker/+/fec27cee2d281e6b22974fe75e73a988b749fdb0/src/main/java/com/gerritforge/gerrit/eventbroker/EventDeserializer.java",
      "parentUuid": "1aad236a_c5de9bd1",
      "range": {
        "startLine": 72,
        "startChar": 21,
        "endLine": 72,
        "endChar": 43
      },
      "revId": "37dea4360c1a1de79423b59f8345791cbc4c7427",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "54bfb749_c3ae4e9a",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/rabbitmq/message/BrokerApiSubscriber.java",
        "patchSetId": 8
      },
      "lineNbr": 72,
      "author": {
        "id": 1014252
      },
      "writtenOn": "2023-11-15T14:15:14Z",
      "side": 1,
      "message": "I created a bug-report for the events-broker module:\nhttps://issues.gerritcodereview.com/issues/311007528",
      "parentUuid": "692a875c_a37906dc",
      "range": {
        "startLine": 72,
        "startChar": 21,
        "endLine": 72,
        "endChar": 43
      },
      "revId": "37dea4360c1a1de79423b59f8345791cbc4c7427",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ac6e627b_3c11c805",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/rabbitmq/message/BrokerApiSubscriber.java",
        "patchSetId": 8
      },
      "lineNbr": 72,
      "author": {
        "id": 1135623
      },
      "writtenOn": "2023-11-15T14:41:06Z",
      "side": 1,
      "message": "I assumed that it was the recommended to use the EventDeserializer. What should the plugin do if an event.type that is null occurs. Should the consumers provided by the plugins(multi-site, websession-broker) that use the BrokerApi handle it themself?\n\nBTW, I still get 403 when trying to access the issue tracker.",
      "parentUuid": "692a875c_a37906dc",
      "range": {
        "startLine": 72,
        "startChar": 21,
        "endLine": 72,
        "endChar": 43
      },
      "revId": "37dea4360c1a1de79423b59f8345791cbc4c7427",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c089d3c4_532d3be6",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/rabbitmq/message/BrokerApiSubscriber.java",
        "patchSetId": 8
      },
      "lineNbr": 72,
      "author": {
        "id": 1014252
      },
      "writtenOn": "2023-11-15T14:59:17Z",
      "side": 1,
      "message": "In my opinion that should be handled by the consumers of the BrokerApi. They know what they expect and how broken expectations should be handled. But that\u0027s a different story, the broker api implementation should at least have the opportunity to log and throw away faulty messages without catching an NPE.",
      "parentUuid": "ac6e627b_3c11c805",
      "range": {
        "startLine": 72,
        "startChar": 21,
        "endLine": 72,
        "endChar": 43
      },
      "revId": "37dea4360c1a1de79423b59f8345791cbc4c7427",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "185abc9b_0f1ce0f3",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/rabbitmq/message/BrokerApiSubscriber.java",
        "patchSetId": 8
      },
      "lineNbr": 72,
      "author": {
        "id": 1135623
      },
      "writtenOn": "2023-11-15T15:50:45Z",
      "side": 1,
      "message": "Ok, then I use @EventGson instead and print a log message if event.type is null without any Exceptions.",
      "parentUuid": "c089d3c4_532d3be6",
      "range": {
        "startLine": 72,
        "startChar": 21,
        "endLine": 72,
        "endChar": 43
      },
      "revId": "37dea4360c1a1de79423b59f8345791cbc4c7427",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e70fbc4f_69ebf3df",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/rabbitmq/message/BrokerApiSubscriber.java",
        "patchSetId": 8
      },
      "lineNbr": 72,
      "author": {
        "id": 1135623
      },
      "writtenOn": "2023-11-27T09:47:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "185abc9b_0f1ce0f3",
      "range": {
        "startLine": 72,
        "startChar": 21,
        "endLine": 72,
        "endChar": 43
      },
      "revId": "37dea4360c1a1de79423b59f8345791cbc4c7427",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cefe546d_5d7b6741",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/rabbitmq/message/MessagePublisher.java",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1014252
      },
      "writtenOn": "2023-11-15T10:09:14Z",
      "side": 1,
      "message": "Currently you have some logic and dependencies in this class that isn\u0027t used by the BrokerApiPublisher class.\nI\u0027d prefer if you extracted an abstract `TopicEventPublisher` class that both `BrokerApiPublisher` and `MessagePublisher` extends and move the child-class specific logic into those classes.",
      "revId": "37dea4360c1a1de79423b59f8345791cbc4c7427",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "77a24d01_673ea691",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/rabbitmq/message/MessagePublisher.java",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1135623
      },
      "writtenOn": "2023-11-27T09:47:21Z",
      "side": 1,
      "message": "I have done a similar solution in a separate change that is grandparent to this.",
      "parentUuid": "cefe546d_5d7b6741",
      "revId": "37dea4360c1a1de79423b59f8345791cbc4c7427",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3d6a447d_fe4df2a4",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/rabbitmq/message/MessagePublisher.java",
        "patchSetId": 8
      },
      "lineNbr": 23,
      "author": {
        "id": 1014252
      },
      "writtenOn": "2023-11-15T10:09:14Z",
      "side": 1,
      "message": "`MessagePublisher`",
      "revId": "37dea4360c1a1de79423b59f8345791cbc4c7427",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7aac7b13_eb5d0612",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/rabbitmq/message/MessagePublisher.java",
        "patchSetId": 8
      },
      "lineNbr": 23,
      "author": {
        "id": 1135623
      },
      "writtenOn": "2023-11-27T09:47:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3d6a447d_fe4df2a4",
      "revId": "37dea4360c1a1de79423b59f8345791cbc4c7427",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "df1ff255_cf8348a3",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/rabbitmq/message/MessagePublisher.java",
        "patchSetId": 8
      },
      "lineNbr": 30,
      "author": {
        "id": 1014252
      },
      "writtenOn": "2023-11-15T10:09:14Z",
      "side": 1,
      "message": "`MessagePublisher`",
      "revId": "37dea4360c1a1de79423b59f8345791cbc4c7427",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2280394f_91b469c0",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/rabbitmq/message/MessagePublisher.java",
        "patchSetId": 8
      },
      "lineNbr": 30,
      "author": {
        "id": 1135623
      },
      "writtenOn": "2023-11-27T09:47:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "df1ff255_cf8348a3",
      "revId": "37dea4360c1a1de79423b59f8345791cbc4c7427",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dc309ba9_3f17e294",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/rabbitmq/message/MessagePublisher.java",
        "patchSetId": 8
      },
      "lineNbr": 74,
      "author": {
        "id": 1014252
      },
      "writtenOn": "2023-11-15T10:09:14Z",
      "side": 1,
      "message": "`MessagePublisher`",
      "range": {
        "startLine": 67,
        "startChar": 0,
        "endLine": 74,
        "endChar": 10
      },
      "revId": "37dea4360c1a1de79423b59f8345791cbc4c7427",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8b3085a8_e7e990c5",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/rabbitmq/message/MessagePublisher.java",
        "patchSetId": 8
      },
      "lineNbr": 74,
      "author": {
        "id": 1135623
      },
      "writtenOn": "2023-11-27T09:47:21Z",
      "side": 1,
      "message": "Removed in new grandparent change.",
      "parentUuid": "dc309ba9_3f17e294",
      "range": {
        "startLine": 67,
        "startChar": 0,
        "endLine": 74,
        "endChar": 10
      },
      "revId": "37dea4360c1a1de79423b59f8345791cbc4c7427",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "53e86481_f786e4ff",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/rabbitmq/message/MessagePublisher.java",
        "patchSetId": 8
      },
      "lineNbr": 169,
      "author": {
        "id": 1014252
      },
      "writtenOn": "2023-11-15T10:09:14Z",
      "side": 1,
      "message": "`MessagePublisher`",
      "range": {
        "startLine": 166,
        "startChar": 0,
        "endLine": 169,
        "endChar": 3
      },
      "revId": "37dea4360c1a1de79423b59f8345791cbc4c7427",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b965993f_6e92a850",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/rabbitmq/message/MessagePublisher.java",
        "patchSetId": 8
      },
      "lineNbr": 169,
      "author": {
        "id": 1135623
      },
      "writtenOn": "2023-11-27T09:47:21Z",
      "side": 1,
      "message": "Removed in new grandparent change.",
      "parentUuid": "53e86481_f786e4ff",
      "range": {
        "startLine": 166,
        "startChar": 0,
        "endLine": 169,
        "endChar": 3
      },
      "revId": "37dea4360c1a1de79423b59f8345791cbc4c7427",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ee46177e_dfda03a7",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/rabbitmq/message/MessagePublisher.java",
        "patchSetId": 8
      },
      "lineNbr": 176,
      "author": {
        "id": 1014252
      },
      "writtenOn": "2023-11-15T10:09:14Z",
      "side": 1,
      "message": "`BrokerApiPublisher`",
      "range": {
        "startLine": 171,
        "startChar": 0,
        "endLine": 176,
        "endChar": 3
      },
      "revId": "37dea4360c1a1de79423b59f8345791cbc4c7427",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "097c3a19_c0cee063",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/rabbitmq/message/MessagePublisher.java",
        "patchSetId": 8
      },
      "lineNbr": 176,
      "author": {
        "id": 1135623
      },
      "writtenOn": "2023-11-27T09:47:21Z",
      "side": 1,
      "message": "I put this in the TopicEventPublisher class for reusage.",
      "parentUuid": "ee46177e_dfda03a7",
      "range": {
        "startLine": 171,
        "startChar": 0,
        "endLine": 176,
        "endChar": 3
      },
      "revId": "37dea4360c1a1de79423b59f8345791cbc4c7427",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eeecd131_35d64ffe",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/rabbitmq/message/MessagePublisher.java",
        "patchSetId": 8
      },
      "lineNbr": 186,
      "author": {
        "id": 1014252
      },
      "writtenOn": "2023-11-15T10:09:14Z",
      "side": 1,
      "message": "`MessagePublisher`",
      "range": {
        "startLine": 178,
        "startChar": 0,
        "endLine": 186,
        "endChar": 3
      },
      "revId": "37dea4360c1a1de79423b59f8345791cbc4c7427",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2b0da728_fd321395",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/rabbitmq/message/MessagePublisher.java",
        "patchSetId": 8
      },
      "lineNbr": 186,
      "author": {
        "id": 1135623
      },
      "writtenOn": "2023-11-27T09:47:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "eeecd131_35d64ffe",
      "range": {
        "startLine": 178,
        "startChar": 0,
        "endLine": 186,
        "endChar": 3
      },
      "revId": "37dea4360c1a1de79423b59f8345791cbc4c7427",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eac47c2b_33b5962b",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/rabbitmq/message/MessagePublisher.java",
        "patchSetId": 8
      },
      "lineNbr": 217,
      "author": {
        "id": 1014252
      },
      "writtenOn": "2023-11-15T10:09:14Z",
      "side": 1,
      "message": "This would probably be the API of the TopicEventPublisher.\n```suggestion\n  private boolean publishEvent(TopicEvent topicEvent) {\n    boolean published \u003d session.publish(gson.toJson(topicEvent.event), topicEvent.topic);\n    topicEvent.published.ifPresent(f -\u003e f.set(published));\n    return published;\n  }\n```",
      "range": {
        "startLine": 213,
        "startChar": 0,
        "endLine": 217,
        "endChar": 3
      },
      "revId": "37dea4360c1a1de79423b59f8345791cbc4c7427",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3362461c_43101091",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/rabbitmq/message/MessagePublisher.java",
        "patchSetId": 8
      },
      "lineNbr": 217,
      "author": {
        "id": 1135623
      },
      "writtenOn": "2023-11-27T14:45:06Z",
      "side": 1,
      "message": "See header comment.",
      "parentUuid": "eac47c2b_33b5962b",
      "range": {
        "startLine": 213,
        "startChar": 0,
        "endLine": 217,
        "endChar": 3
      },
      "revId": "37dea4360c1a1de79423b59f8345791cbc4c7427",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "60ef793d_2de26692",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/rabbitmq/message/MessagePublisher.java",
        "patchSetId": 8
      },
      "lineNbr": 241,
      "author": {
        "id": 1014252
      },
      "writtenOn": "2023-11-15T10:09:14Z",
      "side": 1,
      "message": "```suggestion\n  protected class TopicEvent {\n```",
      "range": {
        "startLine": 241,
        "startChar": 2,
        "endLine": 241,
        "endChar": 9
      },
      "revId": "37dea4360c1a1de79423b59f8345791cbc4c7427",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0c5d539f_16592b61",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/rabbitmq/message/MessagePublisher.java",
        "patchSetId": 8
      },
      "lineNbr": 241,
      "author": {
        "id": 1135623
      },
      "writtenOn": "2023-11-27T09:47:21Z",
      "side": 1,
      "message": "I kept it private. Did not see any point in making it protected when writing TopicEventPublisher.",
      "parentUuid": "60ef793d_2de26692",
      "range": {
        "startLine": 241,
        "startChar": 2,
        "endLine": 241,
        "endChar": 9
      },
      "revId": "37dea4360c1a1de79423b59f8345791cbc4c7427",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2d0cb198_3bbd60d9",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/rabbitmq/message/MessagePublisher.java",
        "patchSetId": 8
      },
      "lineNbr": 244,
      "author": {
        "id": 1014252
      },
      "writtenOn": "2023-11-15T10:09:14Z",
      "side": 1,
      "message": "```suggestion\n    Optional\u003cSettableFuture\u003cBoolean\u003e\u003e published;\n```",
      "range": {
        "startLine": 244,
        "startChar": 4,
        "endLine": 244,
        "endChar": 27
      },
      "revId": "37dea4360c1a1de79423b59f8345791cbc4c7427",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6830cca1_f83b8e9e",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/rabbitmq/message/MessagePublisher.java",
        "patchSetId": 8
      },
      "lineNbr": 244,
      "author": {
        "id": 1135623
      },
      "writtenOn": "2023-11-27T14:45:06Z",
      "side": 1,
      "message": "See header comment.",
      "parentUuid": "2d0cb198_3bbd60d9",
      "range": {
        "startLine": 244,
        "startChar": 4,
        "endLine": 244,
        "endChar": 27
      },
      "revId": "37dea4360c1a1de79423b59f8345791cbc4c7427",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d249b9fc_2b556400",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/rabbitmq/message/MessagePublisher.java",
        "patchSetId": 8
      },
      "lineNbr": 246,
      "author": {
        "id": 1014252
      },
      "writtenOn": "2023-11-15T10:09:14Z",
      "side": 1,
      "message": "```suggestion\n    TopicEvent(String topic, Event event, @Nullable SettableFuture\u003cBoolean\u003e published) {\n```",
      "range": {
        "startLine": 246,
        "startChar": 42,
        "endLine": 246,
        "endChar": 75
      },
      "revId": "37dea4360c1a1de79423b59f8345791cbc4c7427",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ab428dc8_7381e6e4",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/rabbitmq/message/MessagePublisher.java",
        "patchSetId": 8
      },
      "lineNbr": 246,
      "author": {
        "id": 1135623
      },
      "writtenOn": "2023-11-27T14:45:06Z",
      "side": 1,
      "message": "See header comment.",
      "parentUuid": "d249b9fc_2b556400",
      "range": {
        "startLine": 246,
        "startChar": 42,
        "endLine": 246,
        "endChar": 75
      },
      "revId": "37dea4360c1a1de79423b59f8345791cbc4c7427",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "03a1b037_773e42b9",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/rabbitmq/message/MessagePublisher.java",
        "patchSetId": 8
      },
      "lineNbr": 249,
      "author": {
        "id": 1014252
      },
      "writtenOn": "2023-11-15T10:09:14Z",
      "side": 1,
      "message": "```suggestion\n      this.published \u003d Optional.ofNullable(published);\n```",
      "range": {
        "startLine": 249,
        "startChar": 23,
        "endLine": 249,
        "endChar": 32
      },
      "revId": "37dea4360c1a1de79423b59f8345791cbc4c7427",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ca37ad95_71d780db",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/rabbitmq/message/MessagePublisher.java",
        "patchSetId": 8
      },
      "lineNbr": 249,
      "author": {
        "id": 1135623
      },
      "writtenOn": "2023-11-27T14:45:06Z",
      "side": 1,
      "message": "See header comment.",
      "parentUuid": "03a1b037_773e42b9",
      "range": {
        "startLine": 249,
        "startChar": 23,
        "endLine": 249,
        "endChar": 32
      },
      "revId": "37dea4360c1a1de79423b59f8345791cbc4c7427",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}