{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "a401641a_157794bd",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1135623
      },
      "writtenOn": "2025-06-10T14:25:29Z",
      "side": 1,
      "message": "In PS3 I also updated the stream-client library to the latest version.",
      "revId": "c374f33c0375f602fffd01d11e26f58e0c3fb724",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0474367e_956e9418",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/rabbitmq/session/type/StreamSession.java",
        "patchSetId": 3
      },
      "lineNbr": 57,
      "author": {
        "id": 1014252
      },
      "writtenOn": "2025-06-16T14:09:13Z",
      "side": 1,
      "message": "Wouldn\u0027t it make more sense to have the validation code in the `Stream` object and instead call:\n\n\n```suggestion\n\n    if (!stream.isValid()) {\n      return false;\n    }\n```",
      "range": {
        "startLine": 54,
        "startChar": 0,
        "endLine": 57,
        "endChar": 5
      },
      "revId": "c374f33c0375f602fffd01d11e26f58e0c3fb724",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "48bcb1e3_5a863878",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/rabbitmq/session/type/StreamSession.java",
        "patchSetId": 3
      },
      "lineNbr": 57,
      "author": {
        "id": 1135623
      },
      "writtenOn": "2025-06-16T14:50:18Z",
      "side": 1,
      "message": "Yes, fixed.",
      "parentUuid": "0474367e_956e9418",
      "range": {
        "startLine": 54,
        "startChar": 0,
        "endLine": 57,
        "endChar": 5
      },
      "revId": "c374f33c0375f602fffd01d11e26f58e0c3fb724",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1a2e1f0b_59cbfa13",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/rabbitmq/session/type/StreamSession.java",
        "patchSetId": 3
      },
      "lineNbr": 57,
      "author": {
        "id": 1135623
      },
      "writtenOn": "2025-06-16T14:50:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "48bcb1e3_5a863878",
      "range": {
        "startLine": 54,
        "startChar": 0,
        "endLine": 57,
        "endChar": 5
      },
      "revId": "c374f33c0375f602fffd01d11e26f58e0c3fb724",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "298874ba_95bff241",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/rabbitmq/session/type/StreamSession.java",
        "patchSetId": 3
      },
      "lineNbr": 83,
      "author": {
        "id": 1014252
      },
      "writtenOn": "2025-06-16T14:09:13Z",
      "side": 1,
      "message": "```suggestion\n      URI streamUri \u003d new URI(stream.uri);\n      builder.addressResolver(\n          address -\u003e {\n            return new Address(streamUri.getHost(), streamUri.getPort());\n          });\n```",
      "range": {
        "startLine": 75,
        "startChar": 0,
        "endLine": 83,
        "endChar": 11
      },
      "revId": "c374f33c0375f602fffd01d11e26f58e0c3fb724",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "24f9d4ea_f1316cb0",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/rabbitmq/session/type/StreamSession.java",
        "patchSetId": 3
      },
      "lineNbr": 83,
      "author": {
        "id": 1135623
      },
      "writtenOn": "2025-06-16T15:03:51Z",
      "side": 1,
      "message": "I am unsure if we can do this. By logging I have noticed that it tries to connect to not just the host specified in the config, but all our rabbitmq backend servers. With your approach we overwrite the hostname.",
      "parentUuid": "298874ba_95bff241",
      "range": {
        "startLine": 75,
        "startChar": 0,
        "endLine": 83,
        "endChar": 11
      },
      "revId": "c374f33c0375f602fffd01d11e26f58e0c3fb724",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "81ba34f2_8c75503c",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/rabbitmq/session/type/StreamSession.java",
        "patchSetId": 3
      },
      "lineNbr": 83,
      "author": {
        "id": 1014252
      },
      "writtenOn": "2025-06-17T12:17:34Z",
      "side": 1,
      "message": "Is the \"domain\" missing from the other backend servers but not from the lb?\nI\u0027m guessing that the it gets the cluster-nodes from an lb or similar? If so it feels like that is a misconfiguration in our setup.\nNot knowing the limitation of RabbitMQ cluster nodes, it feels like you aren\u0027t guaranteed that all cluster-nodes have the same \"domain\" in the general case which would make this little hack an issue.",
      "parentUuid": "24f9d4ea_f1316cb0",
      "range": {
        "startLine": 75,
        "startChar": 0,
        "endLine": 83,
        "endChar": 11
      },
      "revId": "c374f33c0375f602fffd01d11e26f58e0c3fb724",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "33176e29_95cadf2e",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/rabbitmq/session/type/StreamSession.java",
        "patchSetId": 3
      },
      "lineNbr": 83,
      "author": {
        "id": 1135623
      },
      "writtenOn": "2025-06-17T13:34:24Z",
      "side": 1,
      "message": "\u003e Is the \"domain\" missing from the other backend servers but not from the lb?\n\n\nWhen starting Gerrit and loading the plugin the AddressResolver will be called 6 times, first with the hostname specified in the config(including domain), then 5 times without the domain included, for two of the servers it is called twice and for one server it is just called once.\n\n\u003e Not knowing the limitation of RabbitMQ cluster nodes, it feels like you \naren\u0027t guaranteed that all cluster-nodes have the same \"domain\" in the \ngeneral case which would make this little hack an issue.\n\nThat is a good point, however I do not know how to solve that. I only get information of the domain from the config.",
      "parentUuid": "81ba34f2_8c75503c",
      "range": {
        "startLine": 75,
        "startChar": 0,
        "endLine": 83,
        "endChar": 11
      },
      "revId": "c374f33c0375f602fffd01d11e26f58e0c3fb724",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "556643b0_b35e7f75",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/rabbitmq/session/type/StreamSession.java",
        "patchSetId": 3
      },
      "lineNbr": 83,
      "author": {
        "id": 1014252
      },
      "writtenOn": "2025-06-17T14:23:36Z",
      "side": 1,
      "message": "I can confirm that the issue that this tries to solve was caused by a misconfiguration of our RabbitMQ cluster (FQDN was missing for the configured cluster-nodes).",
      "parentUuid": "33176e29_95cadf2e",
      "range": {
        "startLine": 75,
        "startChar": 0,
        "endLine": 83,
        "endChar": 11
      },
      "revId": "c374f33c0375f602fffd01d11e26f58e0c3fb724",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "97030213_1cd0846b",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/rabbitmq/session/type/StreamSession.java",
        "patchSetId": 3
      },
      "lineNbr": 83,
      "author": {
        "id": 1071857
      },
      "writtenOn": "2025-06-27T14:25:31Z",
      "side": 1,
      "message": "I think we could probably use this workaround for now (as it is an improvement over nothing) and just document this as a known limitation in the configuration.\n\n\"Known Limitation: If the RabbitMQ cluster configuration does not include the full domain of all cluster nodes, each cluster node must be on the same domain as the primary stream address. Contributions welcome\".\n\nOr something like that, and create an issue for improving this in the future.",
      "parentUuid": "556643b0_b35e7f75",
      "range": {
        "startLine": 75,
        "startChar": 0,
        "endLine": 83,
        "endChar": 11
      },
      "revId": "c374f33c0375f602fffd01d11e26f58e0c3fb724",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e9d7630b_5e72b22f",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/rabbitmq/session/type/StreamSession.java",
        "patchSetId": 3
      },
      "lineNbr": 83,
      "author": {
        "id": 1135623
      },
      "writtenOn": "2025-07-03T08:08:32Z",
      "side": 1,
      "message": "Added a comment in the code and docs(config.md) about this limitation. \nAlso rewrote the address-resolver to use contains instead of endsWith to prevent us from overwriting the domain in case the cluster is configured with full FQDN names that use different domains.",
      "parentUuid": "97030213_1cd0846b",
      "range": {
        "startLine": 75,
        "startChar": 0,
        "endLine": 83,
        "endChar": 11
      },
      "revId": "c374f33c0375f602fffd01d11e26f58e0c3fb724",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ce9b0208_55c9d29d",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/rabbitmq/session/type/StreamSession.java",
        "patchSetId": 3
      },
      "lineNbr": 83,
      "author": {
        "id": 1014252
      },
      "writtenOn": "2025-08-08T11:28:53Z",
      "side": 1,
      "message": "Should be solved by setting: https://www.rabbitmq.com/docs/stream#advertised-host-port",
      "parentUuid": "e9d7630b_5e72b22f",
      "range": {
        "startLine": 75,
        "startChar": 0,
        "endLine": 83,
        "endChar": 11
      },
      "revId": "c374f33c0375f602fffd01d11e26f58e0c3fb724",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9128f48d_81803f7c",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/rabbitmq/session/type/StreamSession.java",
        "patchSetId": 3
      },
      "lineNbr": 83,
      "author": {
        "id": 1135623
      },
      "writtenOn": "2025-08-11T10:52:54Z",
      "side": 1,
      "message": "I will remove this code and add some documentation for this, when I have verified that the advertised solution works.",
      "parentUuid": "ce9b0208_55c9d29d",
      "range": {
        "startLine": 75,
        "startChar": 0,
        "endLine": 83,
        "endChar": 11
      },
      "revId": "c374f33c0375f602fffd01d11e26f58e0c3fb724",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c3688308_b2606e97",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/rabbitmq/session/type/StreamSession.java",
        "patchSetId": 3
      },
      "lineNbr": 83,
      "author": {
        "id": 1135623
      },
      "writtenOn": "2025-08-21T08:28:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9128f48d_81803f7c",
      "range": {
        "startLine": 75,
        "startChar": 0,
        "endLine": 83,
        "endChar": 11
      },
      "revId": "c374f33c0375f602fffd01d11e26f58e0c3fb724",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a30bb978_f632d749",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/rabbitmq/session/type/StreamSubscriberSession.java",
        "patchSetId": 3
      },
      "lineNbr": 103,
      "author": {
        "id": 1014252
      },
      "writtenOn": "2025-06-16T14:09:13Z",
      "side": 1,
      "message": "Extract all the extra code for binding, due to the shortcomings of the lib, into a separate method for readability.\n\n```suggestion\n\n    bind(streamName, topic);\n\n    String consumerId \u003d UUID.randomUUID().toString();\n    com.rabbitmq.stream.Consumer consumer \u003d\n        environment.consumerBuilder().stream(streamName)\n            .offset(OffsetSpecification.first())\n            .name(consumerName)\n            .manualTrackingStrategy()\n            .builder()\n            .messageHandler(new Handler(topic, messageBodyConsumer, consumerId))\n            .build();\n    try {\n      logger.atInfo().log(\n          \"Consumer added for topic %s, consuming from stream-offset %d\",\n          topic, consumer.storedOffset());\n    } catch (NoOffsetException ex) {\n      logger.atInfo().withCause(ex).log(\n          \"No offset found for consumer that listens on topic %s, consuming from start of stream.\",\n          topic);\n    }\n\n    consumers.put(consumerId, consumer, false);\n    return consumerId;\n  }\n\n  /* Bind the stream to the exchange. */\n  private void bind(String streamName, String topic) {\n    String exchangeName \u003d properties.getSection(Exchange.class).name;\n    AMQPSession session \u003d new AMQPSession(properties);\n    try (Channel channel \u003d session.createChannel()) {\n      channel.queueBind(streamName, exchangeName, topic);\n    } catch (IOException | TimeoutException ex) {\n      logger.atSevere().withCause(ex).log(\"Failed to bind stream to exchange or close channel\");\n    } finally {\n      session.disconnect();\n    }\n  }\n\n```",
      "range": {
        "startLine": 71,
        "startChar": 0,
        "endLine": 103,
        "endChar": 0
      },
      "revId": "c374f33c0375f602fffd01d11e26f58e0c3fb724",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d62b97f5_d0d9aaae",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/rabbitmq/session/type/StreamSubscriberSession.java",
        "patchSetId": 3
      },
      "lineNbr": 103,
      "author": {
        "id": 1135623
      },
      "writtenOn": "2025-06-17T11:19:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a30bb978_f632d749",
      "range": {
        "startLine": 71,
        "startChar": 0,
        "endLine": 103,
        "endChar": 0
      },
      "revId": "c374f33c0375f602fffd01d11e26f58e0c3fb724",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}